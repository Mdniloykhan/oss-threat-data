id,title,description,label,source,predicted_label
gh001,Malicious dependency mimics popular package,The package `requests-plus` mimics the well-known `requests` library and steals environment variables upon installation.,AV-200,https://github.com/example/repo/issues/101,AV-200
gh002,Dependency confusion in internal repo,"A public package with the same name as an internal library was uploaded to npm, leading to execution in the CI pipeline.",AV-509,https://github.com/example/repo/issues/102,AV-509
gh003,Unicode characters in pull request hide payload,"Invisible Unicode control characters were used in a Python file, changing the visual meaning of the logic in the PR.",AV-300,https://github.com/example/repo/pull/103,AV-509
gh004,Code execution during install,The package `installer-script` runs malicious shell commands from its `setup.py` file at install time.,AV-400,https://github.com/example/repo/issues/104,AV-400
gh005,Malicious build script commits credentials,A contributor added a build step that silently commits AWS credentials from the CI environment to their repo.,AV-410,https://github.com/example/repo/issues/105,AV-200
gh006,Malicious Composer Package 'symfont/process',"The package 'symfont/process' mimics the popular 'symfony/process' package, representing a typosquatting attack.",AV-200,https://github.com/advisories/GHSA-g3j5-mpp2-2fqm,AV-200
gh007,pipreqs Vulnerable to Dependency Confusion,A dependency confusion vulnerability in pipreqs allowed attackers to execute arbitrary code by uploading a crafted PyPI package.,AV-509,https://github.com/advisories/GHSA-v4f4-23wc-99mh,AV-509
gh008,Trojan Source Attack Using Unicode Control Characters,"Invisible Unicode control characters were used to perform Trojan Source attacks, manipulating code logic.",AV-300,https://github.com/PHPCSStandards/PHPCSExtra/issues/286,AV-300
gh009,Classic Builder Cache Poisoning in Docker,A Docker cache poisoning attack using typosquatted image names allowed execution of untrusted images during CI builds.,AV-400,https://github.com/advisories/GHSA-xw73-rw38-6vjc,AV-400
gh010,Poisoned Pipeline Execution in Apache Superset,"Apache Superset was vulnerable to a Poisoned Pipeline Execution attack, potentially compromising the CI pipeline.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-208,AV-410
gh011,Typosquatting in PyPI Packages,"PyPI removed several packages that were typosquatting on prominent, legitimate packages, posing security risks to users.",AV-200,https://github.com/pypa/pypi-support/issues/526,AV-200
gh012,Dependency Confusion in NuGet,"A security researcher highlighted a 'Dependency Confusion' issue affecting NuGet, where malicious packages could be pulled instead of internal ones.",AV-509,https://github.com/NuGet/Home/issues/10566,AV-509
gh013,Trojan Source Vulnerability in ESLint,"ESLint addressed vulnerabilities related to bidirectional control characters and homoglyphs in source code, mitigating CVE-2021-42574 and CVE-2021-42694.",AV-300,https://github.com/eslint/eslint/issues/15240,AV-300
gh014,Cache Poisoning in Docker Buildx,"The --no-cache option in Docker Buildx was found to be ignored in certain scenarios, leading to potential cache poisoning during builds.",AV-400,https://github.com/docker/buildx/issues/544,AV-300
gh015,Poisoned Pipeline Execution in Hibernate ORM,"Hibernate ORM was vulnerable to Poisoned Pipeline Execution (PPE), allowing attackers to exfiltrate Develocity access keys.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-268_Hibernate_ORM/,AV-410
gh016,Typosquatting Detection Tool: urlcrazy,"The urlcrazy tool generates and tests domain typos and variations to detect typosquatting, aiding in identifying potential threats.",AV-200,https://github.com/urbanadventurer/urlcrazy,AV-200
gh017,Dependency Confusion Detection Tool: confused,"The confused tool checks for dependency confusion vulnerabilities across multiple package management systems, helping to identify and mitigate such risks.",AV-509,https://github.com/visma-prodsec/confused,AV-509
gh018,Trojan Source Attack in OCaml,"Discussions in the OCaml community highlighted concerns about bidirectional formatting characters being used for Trojan Source attacks, emphasizing the need for mitigations.",AV-300,https://github.com/ocaml/ocaml/issues/10749,AV-300
gh019,Docker Cache Poisoning Concern,"Concerns were raised about Docker's cache poisoning vulnerabilities, emphasizing the importance of controlling cache sources during builds to prevent such attacks.",AV-400,https://github.com/moby/moby/issues/26065,AV-400
gh020,Poisoned Pipeline Execution in Cilium,"Cilium's CI workflow was found to be vulnerable to Poisoned Pipeline Execution (PPE), which could lead to the exfiltration of sensitive credentials.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-226_GHSL-2024-227_Cilium/,AV-410
av021,Malware in `ua-parser-js`,Attackers published a malicious version of `ua-parser-js` to npm that exfiltrated environment variables and credentials.,AV-400,https://github.com/advisories/GHSA-pjwm-rvh2-c87w,AV-400
av022,Dependency confusion in Microsoft’s Azure SDK,A security researcher exploited public packages named after internal Azure SDK libraries to demonstrate dependency confusion vulnerabilities.,AV-509,https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610,AV-509
av023,Trojan Source in Go standard library discussion,"Bidirectional Unicode characters were found in pull requests, raising concerns about control flow misinterpretation.",AV-300,https://github.com/golang/go/issues/50617,AV-300
av024,`event-stream` malicious dependency,A maintainer added a malicious dependency `flatmap-stream` that stole credentials from affected applications.,AV-400,https://blog.npmjs.org/post/180565383195/details-about-the-event-stream-incident,AV-400
av025,Typo attack on `crossenv`,A package named `crossenv` imitated `cross-env` and harvested environment variables during install.,AV-200,https://thehackernews.com/2017/05/typosquatting-npm-package-manager.html,AV-200
av026,Compromised PyPI package `ctx`,"The `ctx` package on PyPI was compromised to install a reverse shell, silently affecting systems on install.",AV-400,https://blog.checkmarx.com/the-rise-of-malicious-packages-on-pypi/,AV-400
av027,Trojan Source vulnerability in ESLint,ESLint disclosed vulnerabilities due to bidirectional Unicode characters that manipulated logical code flow.,AV-300,https://github.com/eslint/eslint/issues/15240,AV-300
av028,Typo package `twilio-npm` uploaded to npm,"Attackers uploaded `twilio-npm`, mimicking the legit `twilio` SDK, to capture API credentials.",AV-200,https://blog.reversinglabs.com/blog/pypi-malicious-package-attack,AV-200
av029,Dependency confusion using internal `aws-sdk`,Researchers exploited CI pipelines pulling a malicious public `aws-sdk` to mimic internal private packages.,AV-509,https://github.blog/2021-12-20-log4shell-impact-open-source-projects/,AV-509
av030,Compromised RubyGems package `strong_password`,A malicious update to `strong_password` introduced credential-stealing code triggered during install-time.,AV-400,https://rubygems.org/gems/strong_password,AV-400
av031,Typosquatting attack with `colors.js` and `faker.js`,"A rogue maintainer deliberately introduced infinite loops into widely used packages `colors.js` and `faker.js`, causing widespread disruption.",AV-200,https://www.bleepingcomputer.com/news/security/rogue-npm-package-colorjs-breaks-thousands-of-apps/,AV-200
av032,Trojan Source in Python ecosystem,"Unicode-based source code manipulation allowed attackers to introduce misleading control flows undetectable in code reviews.",AV-300,https://trojansource.codes,AV-300
av033,Malicious `noblox.js` update,"The Roblox wrapper `noblox.js` was updated with code that exfiltrated tokens from user sessions to a remote server.",AV-400,https://github.com/opencritic/opencritic/issues/166,AV-400
av034,Dependency confusion attack in Shopify,"Security researcher exploited Shopify’s CI/CD system by uploading public packages with names matching internal ones.",AV-509,https://github.com/shopify/security/issues/143,AV-509
av035,Poisoned pipeline in Rust project `rustsec`,"A malicious PR exploited the CI pipeline to exfiltrate environment secrets during the build process.",AV-410,https://github.com/RustSec/advisory-db/issues/605,AV-410
av036,Typosquatting using `react-router-dom-fix`,"Attackers uploaded `react-router-dom-fix` to mimic the real `react-router-dom`, stealing environment variables on install.",AV-200,https://blog.reversinglabs.com/blog/npm-malicious-packages-react-router,AV-200
av037,Unicode exploit in Rust compiler PR,"A pull request to the Rust compiler contained invisible Unicode characters, altering logic without visible change.",AV-300,https://github.com/rust-lang/rust/issues/87665,AV-300
av038,Malicious PyPI package `fshec`,"The `fshec` package ran post-install scripts to exfiltrate SSH keys to a remote server.",AV-400,https://github.com/advisories/GHSA-xxxxx,AV-400
av039,Dependency confusion in Netflix open source pipeline,"An internal build process at Netflix pulled a public package instead of an internal version, triggering unintended behavior.",AV-509,https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610,AV-509
av040,Poisoned GitHub Actions pipeline in OSS project,"A contributor submitted a PR with CI scripts that ran malicious curl commands to export GitHub secrets.",AV-410,https://securitylab.github.com/research/github-actions-preventing-pipeline-poisoning/,AV-410
