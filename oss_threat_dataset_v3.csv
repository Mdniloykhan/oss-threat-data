id,title,description,label,source
gh001,Malicious dependency mimics popular package,The package `requests-plus` mimics the well-known `requests` library and steals environment variables upon installation.,AV-200,https://github.com/example/repo/issues/101
gh002,Dependency confusion in internal repo,"A public package with the same name as an internal library was uploaded to npm, leading to execution in the CI pipeline.",AV-509,https://github.com/example/repo/issues/102
gh003,Unicode characters in pull request hide payload,"Invisible Unicode control characters were used in a Python file, changing the visual meaning of the logic in the PR.",AV-300,https://github.com/example/repo/pull/103
gh004,Code execution during install,The package `installer-script` runs malicious shell commands from its `setup.py` file at install time.,AV-400,https://github.com/example/repo/issues/104
gh005,Malicious build script commits credentials,A contributor added a build step that silently commits AWS credentials from the CI environment to their repo.,AV-410,https://github.com/example/repo/issues/105
gh006,Malicious Composer Package 'symfont/process',"The package 'symfont/process' mimics the popular 'symfony/process' package, representing a typosquatting attack.",AV-200,https://github.com/advisories/GHSA-g3j5-mpp2-2fqm
gh007,pipreqs Vulnerable to Dependency Confusion,A dependency confusion vulnerability in pipreqs allowed attackers to execute arbitrary code by uploading a crafted PyPI package.,AV-509,https://github.com/advisories/GHSA-v4f4-23wc-99mh
gh008,Trojan Source Attack Using Unicode Control Characters,"Invisible Unicode control characters were used to perform Trojan Source attacks, manipulating code logic.",AV-300,https://github.com/PHPCSStandards/PHPCSExtra/issues/286
gh009,Classic Builder Cache Poisoning in Docker,A Docker cache poisoning attack using typosquatted image names allowed execution of untrusted images during CI builds.,AV-400,https://github.com/advisories/GHSA-xw73-rw38-6vjc
gh010,Poisoned Pipeline Execution in Apache Superset,"Apache Superset was vulnerable to a Poisoned Pipeline Execution attack, potentially compromising the CI pipeline.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-208
gh011,Typosquatting in PyPI Packages,"PyPI removed several packages that were typosquatting on prominent, legitimate packages, posing security risks to users.",AV-200,https://github.com/pypa/pypi-support/issues/526
gh012,Dependency Confusion in NuGet,"A security researcher highlighted a 'Dependency Confusion' issue affecting NuGet, where malicious packages could be pulled instead of internal ones.",AV-509,https://github.com/NuGet/Home/issues/10566
gh013,Trojan Source Vulnerability in ESLint,"ESLint addressed vulnerabilities related to bidirectional control characters and homoglyphs in source code, mitigating CVE-2021-42574 and CVE-2021-42694.",AV-300,https://github.com/eslint/eslint/issues/15240
gh014,Cache Poisoning in Docker Buildx,"The --no-cache option in Docker Buildx was found to be ignored in certain scenarios, leading to potential cache poisoning during builds.",AV-400,https://github.com/docker/buildx/issues/544
gh015,Poisoned Pipeline Execution in Hibernate ORM,"Hibernate ORM was vulnerable to Poisoned Pipeline Execution (PPE), allowing attackers to exfiltrate Develocity access keys.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-268_Hibernate_ORM/
gh016,Typosquatting Detection Tool: urlcrazy,"The urlcrazy tool generates and tests domain typos and variations to detect typosquatting, aiding in identifying potential threats.",AV-200,https://github.com/urbanadventurer/urlcrazy
gh017,Dependency Confusion Detection Tool: confused,"The confused tool checks for dependency confusion vulnerabilities across multiple package management systems, helping to identify and mitigate such risks.",AV-509,https://github.com/visma-prodsec/confused
gh018,Trojan Source Attack in OCaml,"Discussions in the OCaml community highlighted concerns about bidirectional formatting characters being used for Trojan Source attacks, emphasizing the need for mitigations.",AV-300,https://github.com/ocaml/ocaml/issues/10749
gh019,Docker Cache Poisoning Concern,"Concerns were raised about Docker's cache poisoning vulnerabilities, emphasizing the importance of controlling cache sources during builds to prevent such attacks.",AV-400,https://github.com/moby/moby/issues/26065
gh020,Poisoned Pipeline Execution in Cilium,"Cilium's CI workflow was found to be vulnerable to Poisoned Pipeline Execution (PPE), which could lead to the exfiltration of sensitive credentials.",AV-410,https://securitylab.github.com/advisories/GHSL-2024-226_GHSL-2024-227_Cilium/
